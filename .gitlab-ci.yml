image: docker
variables:
  CI_REGISTRY_IMAGE: "${CI_REGISTRY}/${CI_PROJECT_PATH}"
stages:
- build
- deploy-dev
# - deploy-qa

build:
  stage: build
  tags:
  - bpm
  - dev
  only:
  - master
  script:
  # - docker build -t "${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}" .
  # - docker push "${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}"
  # - docker build -t "${CI_REGISTRY_IMAGE}:1.0" .
  # - docker push "${CI_REGISTRY_IMAGE}:1.0"
  # - docker-compose build -t "${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}" .
  # - docker build --add-host=directum.corp.local:192.168.60.7 --add-host=db-germes.corp.local:192.168.60.42 --add-host=corp.local:192.168.60.15 -t "${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}" .

    # - "corp.local:192.168.60.15"
    # - "db-germes.corp.local:192.168.60.42"
    # - "directum.corp.local:192.168.60.7"
  - docker build -t "${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}" .
  - docker push "${CI_REGISTRY_IMAGE}:${CI_PIPELINE_ID}"
  

.deployment: &deployment
  image:
    name: docker/compose:1.23.1
    entrypoint: ["/bin/sh", "-c"]
  script:
  - docker-compose pull
  - docker-compose up -d --force-recreate
  
deploy-dev:
  stage: deploy-dev
  environment: DEV
  tags:
  - bpm
  - dev
  only:
  - master
  <<: *deployment

# deploy-qa:
#   stage: deploy-qa
#   environment: QA
#   tags:
#   - bpm
#   - qa
#   only:
#   - master
#   <<: *deployment

